////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.
///
/// @param {Color} $background [null] - The list background color.
/// @param {Color} $header-background [null] - The list header background color.
/// @param {Color} $header-text-color [null] - The list header text color.
/// @param {Color} $item-background [null] - The list item background color.
/// @param {Color} $item-text-color [null] - The list item text color.
/// @param {Color} $item-background-active [null] - The active list item background color.
/// @param {Color} $item-text-color-active [null] - The active list item text color.
///
/// @param {border-radius} $border-radius [null] - The border radius used for list component.
/// @param {border-radius} $item-border-radius [null] - The border radius used for list item.
///
/// @requires $default-palette
/// @requires $light-schema
/// @requires apply-palette
/// @requires extend
/// @requires text-contrast
/// @requires round-borders
///
/// @example scss Change the list background color
///   $my-list-theme: igx-list-theme($background: black);
///   // Pass the theme to the igx-list component mixin
///   @include igx-avatar($my-list-theme);
@function igx-list-theme(
    $palette: $default-palette,
    $schema: $light-schema,

    $border-radius: null,
    $item-border-radius: null,
    $background: null,
    $header-background: null,
    $header-text-color: null,
    $item-background: null,
    $item-text-color: null,
    $item-background-active: null,
    $item-text-color-active: null
) {
    $name: 'igx-list';
    $list-schema: map-get($schema, $name);
    $theme: apply-palette($list-schema, $palette);

    $border-radius: round-borders(
        if($border-radius, $border-radius, map-get($list-schema, 'border-radius')), 0, 24px
    );

    $item-border-radius: round-borders(
        if($item-border-radius, $item-border-radius, map-get($list-schema, 'item-border-radius')), 0, 24px
    );

    @if not($header-background) and $background {
        $header-background: $background;
    }

    @if not($item-background) and $background {
        $item-background: $background;
    }

    @if not($item-background-active) and $background {
        @if type-of($background) == 'color' {
            @if lightness($background) > 50 {
                $item-background-active: rgba(text-contrast($background), .04);
            } @else {
                $item-background-active: rgba(text-contrast($background), .12);
            }
        }
    }

    @if not($header-text-color) and $header-background {
        $header-text-color: text-contrast($header-background);
    }

    @if not($item-text-color) and $item-background {
        $item-text-color: text-contrast($item-background);
    }

    @if not($item-text-color-active) and $item-text-color {
        $item-text-color-active: $item-text-color;
    }

    @return extend($theme, (
        name: $name,
        palette: $palette,
        border-radius: $border-radius,
        item-border-radius: $item-border-radius,
        background: $background,
        header-background: $header-background,
        header-text-color: $header-text-color,
        item-background: $item-background,
        item-text-color: $item-text-color,
        item-background-active: $item-background-active,
        item-text-color-active: $item-text-color-active
    ));
}

/// @param {Map} $theme - The theme used to style the component.
/// @requires em
/// @requires --var
@mixin igx-list($theme) {
    @include igx-root-css-vars($theme);

    // @debug $theme;

    $list-item-height: (
        comfortable: rem(48px),
        cosy: rem(32px),
        compact: rem(24px)
    );

    $list-empty-padding: (
        comfortable: rem(16px),
        cosy: rem(8px),
        compact: rem(4px)
    );

    $list-item-padding: (
        comfortable: rem(8px) rem(16px),
        cosy: rem(4px) rem(8px),
        compact: rem(2px) rem(4px)
    );

    %igx-list {
        position: relative;
        display: flex;
        flex-flow: column nowrap;
        background: --var($theme, 'background');
        height: 100%;
        overflow: hidden;
        z-index: 0;
        border-radius: --var($theme, 'border-radius');
    }

    %igx-list-empty {
        justify-content: center;
        align-items: center;
    }

    %igx-list-empty-image {
        width: auto;
        max-height: 120px;
    }

    %igx-list-empty-message {
        text-align: center;
        color: --var($theme, 'item-text-color');
        padding: map-get($list-empty-padding, 'comfortable');
        z-index: 1;
    }

    %igx-list-empty-message--cosy{
        padding: map-get($list-empty-padding, 'cosy');
    }

    %igx-list-empty-message--compact{
        padding: map-get($list-empty-padding, 'compact');
    }

    %igx-list-header {
        display: flex;
        align-items: center;
        color: --var($theme, 'header-text-color');
        background: --var($theme, 'header-background');
        padding: map-get($list-item-padding, 'comfortable');
        user-select: none;
    }

    %igx-list-header--cosy {
        padding: map-get($list-item-padding, 'cosy');
    }

    %igx-list-header--compact {
        padding: map-get($list-item-padding, 'compact');
    }

    %igx-list-item-base {
        display: flex;
        flex-flow: column wrap;
        justify-content: center;
        border-radius: --var($theme, 'item-border-radius');
    }

    %igx-list-item-pan {
        position: absolute;
        visibility: hidden;
        display: flex;
        z-index: 1;
    }

    %igx-list-item-content {
        display: flex;
        position: relative;
        flex-flow: column wrap;
        justify-content: center;
        padding: map-get($list-item-padding, 'comfortable');
        min-height: map-get($list-item-height, 'comfortable');
        color: --var($theme, 'item-text-color');
        background: --var($theme, 'item-background');
        z-index: 2;
        border-radius: --var($theme, 'item-border-radius');
    }

    %igx-list-item-content--compact {
        padding: map-get($list-item-padding, 'compact');
        min-height: map-get($list-item-height, 'compact');
    }

    %igx-list-item-content--cosy {
        padding: map-get($list-item-padding, 'cosy');
        min-height: map-get($list-item-height, 'cosy');
    }

    %igx-list-item-content--active {
        color: --var($theme, 'item-text-color-active');
        background: --var($theme, 'item-background-active');
        z-index: 3;
    }

    %igx-list-item-content--inactive {
        transition: transform .3s $ease-out-quad;
    }
}

/// Adds typography styles for the igx-list component.
/// Uses the 'caption' and 'subtitle-1'
/// categories from the typographic scale.
/// @group typography
/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.
/// @param {Map} $categories [(header: 'overline', item: 'subtitle-1')] - The categories from the typographic scale used for type styles.
/// @requires {mixin} igx-type-style
@mixin igx-list-typography(
    $type-scale,
    $categories: (
        header: 'overline',
        item: 'subtitle-1'
    )
) {
    $header: map-get($categories, 'header');
    $item: map-get($categories, 'item');

    @include igx-scope('.igx-typography') {
        %igx-list-header {
            @include igx-type-style($type-scale, $header) {
                margin: 0;
            }
        }

        %igx-list-item {
            @include igx-type-style($type-scale, $item) {
                margin: 0;
            }
        }
    }
}
